// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using demo.Models;

#nullable disable

namespace demo.Models.Database.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("demo.Models.Database.Tables.PlantsConsumersTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ConsumerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UploadDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PlantsConsumersTables");
                });

            modelBuilder.Entity("demo.Models.Database.Tables.PlantsConsumptionsTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ConsumerId")
                        .HasColumnType("int");

                    b.Property<double>("Consumption")
                        .HasColumnType("float");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ConsumerId");

                    b.ToTable("PlantsConsumptionsTables");
                });

            modelBuilder.Entity("demo.Models.Database.Tables.HouseConsumersTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ConsumerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UploadDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("HouseConsumersTables");
                });

            modelBuilder.Entity("demo.Models.Database.Tables.HouseConsumptionsTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ConsumerId")
                        .HasColumnType("int");

                    b.Property<double>("Consumption")
                        .HasColumnType("float");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<double>("Weather")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ConsumerId");

                    b.ToTable("HouseConsumptionsTables");
                });

            modelBuilder.Entity("demo.Models.Database.Tables.PlantsConsumptionsTable", b =>
                {
                    b.HasOne("demo.Models.Database.Tables.PlantsConsumersTable", "Consumer")
                        .WithMany("Consumptions")
                        .HasForeignKey("ConsumerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Consumer");
                });

            modelBuilder.Entity("demo.Models.Database.Tables.HouseConsumptionsTable", b =>
                {
                    b.HasOne("demo.Models.Database.Tables.HouseConsumersTable", "Consumer")
                        .WithMany("Consumptions")
                        .HasForeignKey("ConsumerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Consumer");
                });

            modelBuilder.Entity("demo.Models.Database.Tables.PlantsConsumersTable", b =>
                {
                    b.Navigation("Consumptions");
                });

            modelBuilder.Entity("demo.Models.Database.Tables.HouseConsumersTable", b =>
                {
                    b.Navigation("Consumptions");
                });
#pragma warning restore 612, 618
        }
    }
}
