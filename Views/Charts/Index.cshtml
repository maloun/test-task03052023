@using demo.Views.Charts
@model ChartsLimits
<!DOCTYPE HTML>
<html>
<head>

</head>
<body>
	<div class="charts">
		<div>
			с <input id="HouseFrom" class="HouseFilter" type="date" />
			по <input id="HouseTo" class="HouseFilter" type="date" />
		</div>
		<div>
			с <input id="PlantsFrom" class="PlantsFilter" type="date" />
			по <input id="PlantsTo" class="PlantsFilter" type="date" />
		</div>

		<div id="housesConsumption" class="chart"></div>
		<div id="plantsConsumption" class="chart"></div>
		<br/>
		<div id="housesTrands" class="chart"></div>
		<div id="plantsTrands" class="chart"></div>
		<br/>
		<div id="housesForecast" class="chart"></div>
		<div id="plantsForecast" class="chart"></div>
	</div>

	<script>		
		var PlantsConsumption, 
			PlantsConsumption, 
			HousesTrands, 
			PlantsTrands,
			HousesForecast, 
			PlantsForecast;

		function RequestHouseData() {
			var fromDate = HouseFrom.value.toString();
			var toDate = HouseTo.value.toString();
			if (HouseFrom.oldValue == fromDate && HouseTo.oldValue == toDate) return;
			HouseFrom.oldValue = fromDate;
			HouseTo.oldValue = toDate;

			$.ajax({
				url: "/Charts/GetHouseData?from=" + fromDate + "&to=" + toDate,
				type: 'GET',
				processData: false,
				contentType: false,
				success: function (data) {
					data = JSON.parse(data);

					if (HousesConsumption.data[0].dataPoints.length > 0)					
						HousesConsumption.destroy();
					
					for (var i = 0; i < data.Data.length; i++){
						HousesConsumption.data[0].dataPoints.push(
							{ x: Date.parse(data.Data[i].x), y:data.Data[i].y }
						);
					}
					HousesConsumption.render();					
				},
				error: function (data) {
					alert("не удалось загрузить данные");
				}
			});			
		}

		function RequestPlantsData() {
			var fromDate = PlantsFrom.value.toString();
			var toDate = PlantsTo.value.toString();
			if (PlantsFrom.oldValue == fromDate && PlantsTo.oldValue == toDate) return;
			PlantsFrom.oldValue = fromDate;
			PlantsTo.oldValue = toDate;
						
			$.ajax({
				url: "/Charts/GetPlantsData?from=" + fromDate + "&to=" + toDate,
				type: 'GET',
				data: new FormData(this),
				processData: false,
				contentType: false,
				success: function (data) {
					alert(data);
					//window.location.href = "/Charts/Index";
				},
				error: function (data) {
					alert(data);
					//alert(JSON.parse(data.responseText).error);
				}
			})
		}

		$(document).ready(function () {
			$("#HouseFrom").val("@Model.HouseLimits.from.ToString("yyyy-MM-dd")");
			$("#HouseTo").val("@Model.HouseLimits.to.ToString("yyyy-MM-dd")");
			$("#PlantsFrom").val("@Model.PlantsLimits.from.ToString("yyyy-MM-dd")");
			$("#PlantsTo").val("@Model.PlantsLimits.to.ToString("yyyy-MM-dd")");
			$(".HouseFilter").on("focusout", RequestHouseData);
			$(".PlantsFilter").on("focusout", RequestPlantsData);
			HousesConsumption = newChart("housesConsumption", "1", "2", "3");
			PlantsConsumption = newChart("plantsConsumption", "1", "2", "3");
			HousesTrands = newChart("housesTrands", "1", "2", "3");
			PlantsTrands = newChart("plantsTrands", "1", "2", "3");
			HousesForecast = newChart("housesForecast", "1", "2", "3");
			PlantsForecast = newChart("plantsForecast", "1", "2", "3");	
		});
				
	</script>
	<script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
	<script src="~/js/Charts.js"></script>
</body>
</html>