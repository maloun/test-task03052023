@using demo.Views.Charts
@model ChartsLimits
<!DOCTYPE HTML>
<html>
<head>
<style>
	.charts div{
		width: 47%;
		float: left;
		margin-bottom:3%; 
	}
	.chart{
		height: 300px; 
	}
	.charts div:nth-child(3n+1){
		margin-right: 6%;
	}
</style>

<script>
		@{
			string jsonDate(DateTime d)
			{
				return $"new Date({d.Year},{d.Month},{d.Day})";
			}
			string jsonDouble(double d)
			{
				return d.ToString("0.000000", System.Globalization.CultureInfo.InvariantCulture);
			}
		}

function toogleDataSeries(e){
	if (typeof(e.dataSeries.visible) === "undefined" || e.dataSeries.visible) {
		e.dataSeries.visible = false;
	} else{
		e.dataSeries.visible = true;
	}
	e.chart.render();
}

window.onload = function () {

var HousesConsumption = new CanvasJS.Chart("housesConsumption", {
	animationEnabled: true,
	theme: "light2",
	title:{ text: "График потребления для домов" },

	axisX:{valueFormatString: "MMM YYYY",crosshair: {enabled: true, snapToDataPoint: true}},
	axisY:{title: "Погода", includeZero: true, crosshair: {enabled: true}},
	toolTip:{shared:true},  
	legend:{
		cursor:"pointer",
		verticalAlign: "bottom",
		horizontalAlign: "left",
		dockInsidePlotArea: true,
		itemclick: toogleDataSeries	
	},
	data: [{
		type: "line",
		showInLegend: true,
		name: "потребление тепла",
		markerType: "square",
		xValueFormatString: "DD MMM, YYYY",
		color: "#F08080",
		dataPoints: [
		@{
			/*
			if (Model.Houses != null)
				foreach (var a in Model.Houses.Data)
				{
					@($$"""{x: {{jsonDate(a.x)}}, y: {{jsonDouble(a.y)}}},""")					
				}
				*/
		}
		]
	}]
});
HousesConsumption.render();


var PlantsConsumption = new CanvasJS.Chart("plantsConsumption", {
	animationEnabled: true,
	theme: "light2",
	title:{ text: "График потребления для заводов" },

	axisX:{valueFormatString: "MMM YYYY",crosshair: {enabled: true, snapToDataPoint: true}},
	axisY:{title: "Цена", includeZero: true, crosshair: {enabled: true}},
	toolTip:{shared:true},  
	legend:{
		cursor:"pointer",
		verticalAlign: "bottom",
		horizontalAlign: "left",
		dockInsidePlotArea: true,
		itemclick: toogleDataSeries	
	},
	data: [{
		type: "line",
		showInLegend: true,
		name: "потребление тепла",
		markerType: "square",
		xValueFormatString: "DD MMM, YYYY",
		color: "#4F81BC",
		dataPoints: [
		@{
			/*
			if (Model.Plants.Data != null)
				foreach (var a in Model.Plants.Data)
				{
					@($$"""{x: {{jsonDate(a.x)}}, y: {{jsonDouble(a.y)}}},""")
				}
				*/
		}
		]
	}]
});
PlantsConsumption.render();


var HousesTrands = new CanvasJS.Chart("housesTrands", {
	animationEnabled: true,
	theme: "light2",
	title:{ text: "Линейный тренд для домов" },

	axisX:{
		valueFormatString: "DD MMM",
		crosshair: {
			enabled: true,
			snapToDataPoint: true
		}
	},
	axisY: {
		title: "Погода",
		includeZero: true,
		crosshair: {
			enabled: true
		}
	},
	axisZ:{
		//title: "Response Time (in ms)",
		includeZero: true
	},
	toolTip:{
		shared:true
	},  
	legend:{
		cursor:"pointer",
		verticalAlign: "bottom",
		horizontalAlign: "left",
		dockInsidePlotArea: true,
		itemclick: toogleDataSeries	
	},
	data: [{
		type: "line",
		showInLegend: true,
		name: "потребление тепла",
		markerType: "square",
		xValueFormatString: "DD MMM, YYYY",
		color: "#F08080",
		dataPoints: [
		@{
			/*
			if (Model.Houses.Data != null)
				foreach (var a in Model.Houses.Data)
				{
					@($$"""{x: {{jsonDate(a.x)}}, y: {{jsonDouble(a.y)}}},""")
				}
				*/
		}
		]
	},
	{
		type: "line",
		showInLegend: true,
		name: "линейный тренд",
					lineDashType: "solid",
		dataPoints: [
		@{
			/*
			if (Model.Houses.Data != null)
				foreach (var a in Model.Houses.Data)
				{
					@($$"""{x: {{jsonDate(a.x)}}, y: {{jsonDouble(a.y)}}},""")
				}
				*/
		}
		]
	}]
});
HousesTrands.render();


var PlantsTrands = new CanvasJS.Chart("plantsTrands", {
	animationEnabled: true,
	theme: "light2",
	title: { text: "Линейный тренд для заводов" },

	axisX: {
		valueFormatString: "DD MMM",
		crosshair: {
		enabled: true,
		snapToDataPoint: true
	}
	},
	axisY: {
		title: "Цена",
		includeZero: true,
		crosshair: {
		enabled: true
	}
	},
	axisZ: {
		includeZero: true
	},
	toolTip: {
		shared: true
	},
	legend: {
		cursor: "pointer",
		verticalAlign: "bottom",
		horizontalAlign: "left",
		dockInsidePlotArea: true,
		itemclick: toogleDataSeries
	},
	data: [{
		type: "line",
		showInLegend: true,
		name: "потребление тепла",
		markerType: "square",
		xValueFormatString: "DD MMM, YYYY",
		color: "#4F81BC",
		dataPoints: [
		@{
			/*
			if (Model.Houses.Data != null)
				foreach (var a in Model.Plants.Data)
				{
					@($$"""{x: {{jsonDate(a.x)}}, y: {{jsonDouble(a.y)}}},""")
				}
				*/
		}
		]},
		{
		type: "line",
		showInLegend: true,
		name: "линейный тренд",
		lineDashType: "solid",
		dataPoints: [
		@{
			/*
			if (Model.Houses.Data != null)
				foreach (var a in Model.Plants.Forecast)
				{
					@($$"""{x: {{jsonDate(a.x)}}, y: {{jsonDouble(a.y)}}},""")	
				}
				*/
		}]
	}/*,
{
type: "scatter",
name: "Server Mars",
showInLegend: true,
color: "#4F81BC",
toolTipContent: "<span style=\"color:#4F81BC \"><b>{name}</b></span><br/><b> Load:</b> {x} TPS<br/><b> Response Time:</b></span> {y} ms",
dataPoints: [
	{ x: new Date(2017, 0, 3), y: 500 },
	{ x: new Date(2017, 0, 4), y: 500 },
	{ x: new Date(2017, 0, 5), y: 530 },
	{ x: new Date(2017, 0, 6), y: 590 },
	{ x: new Date(2017, 0, 7), y: 589 },
	{ x: new Date(2017, 0, 8), y: 550 },
	{ x: new Date(2017, 0, 9), y: 500 },
	{ x: new Date(2017, 0, 10), y: 590 },
	{ x: new Date(2017, 0, 11), y: 525 },
	{ x: new Date(2017, 0, 12), y: 530 },
	{ x: new Date(2017, 0, 13), y: 550 },
	{ x: new Date(2017, 0, 14), y: 520 },
	{ x: new Date(2017, 0, 15), y: 553 },
	{ x: new Date(2017, 0, 16), y: 596 }
]
}*/]
});
PlantsTrands.render();

}
</script>
</head>
<body>
	<div class="charts">
		<div>
			с <input id="HouseFrom" class="HouseFilter" type="date" />
			по <input id="HouseTo" class="HouseFilter" type="date" />
		</div>
		<div>
			с <input id="PlantsFrom" class="PlantsFilter" type="date" />
			по <input id="PlantsTo" class="PlantsFilter" type="date" />
		</div>

		<div id="housesConsumption" class="chart"></div>
		<div id="plantsConsumption" class="chart"></div>
		<br/>
		<div id="housesTrands" class="chart"></div>
		<div id="plantsTrands" class="chart"></div>
		<br/>
		<div id="housesForecast" class="chart"></div>
		<div id="plantsForecast" class="chart"></div>
	</div>

	<script>
		function isDate(date) {
			return (new Date(date) !== "Invalid Date") && !isNaN(new Date(date));
		}

		function RequestHouseData() {
			var fromDate = HouseFrom.value.toString();
			var toDate = HouseTo.value.toString();
			if (HouseFrom.oldValue == fromDate && HouseTo.oldValue == toDate) return;
			HouseFrom.oldValue = fromDate;
			HouseTo.oldValue = toDate;

			$.ajax({
				url: "/Charts/GetHouseData?from=" + fromDate + "&to=" + toDate,
				type: 'GET',
				processData: false,
				contentType: false,
				success: function (data) {
					alert("success");
					//alert(data.message);
					//window.location.href = "/Charts/Index";
				},
				error: function (data) {
					alert("не удалось загрузить данные");
					//alert(JSON.parse(data.responseText).error);
				}
			});			
		}

		function RequestPlantsData() {
			var fromDate = PlantsFrom.value.toString();
			var toDate = PlantsTo.value.toString();
			if (PlantsFrom.oldValue == fromDate && PlantsTo.oldValue == toDate) return;
			PlantsFrom.oldValue = fromDate;
			PlantsTo.oldValue = toDate;

			$.ajax({
				url: "/Charts/GetPlantsData?from=" + fromDate + "&to=" + toDate,
				type: 'GET',
				//processData: false,
				contentType: false,
				async: true,
				success: function (res) {
					alert("success" + res);

					//var output = '';
					//for (var property in data) 
					//	output += property + ': ' + data[property] + '; ';
					//alert(output);
					//alert(data.message);
					//window.location.href = "/Charts/Index";
				},
				error: function (data) {
					alert("не удалось загрузить данные");
					//alert(JSON.parse(data.responseText).error);
				}
			});
		}

		$(document).ready(function () {
			$("#HouseFrom").val("@Model.HouseLimits.from.ToString("yyyy-MM-dd")");
			$("#HouseTo").val("@Model.HouseLimits.to.ToString("yyyy-MM-dd")");
			$("#PlantsFrom").val("@Model.PlantsLimits.from.ToString("yyyy-MM-dd")");
			$("#PlantsTo").val("@Model.PlantsLimits.to.ToString("yyyy-MM-dd")");
			$(".HouseFilter").on("focusout", RequestHouseData);
			$(".PlantsFilter").on("focusout", RequestPlantsData);
		});
		
	</script>
	<script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
</body>
</html>