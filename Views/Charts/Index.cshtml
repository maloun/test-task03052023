@using demo.Views.Charts
@model ChartsData
<!DOCTYPE HTML>
<html>
<head>
<style>
	.charts div{
		height: 300px; 
		width: 47%;
		float: left;
		margin-bottom:3%; 
	}
	.charts div:first-child{
		margin-right: 6%;
	}
</style>

<script>
function toogleDataSeries(e){
	if (typeof(e.dataSeries.visible) === "undefined" || e.dataSeries.visible) {
		e.dataSeries.visible = false;
	} else{
		e.dataSeries.visible = true;
	}
	e.chart.render();
}

window.onload = function () {

var HousesConsumption = new CanvasJS.Chart("housesConsumption", {
	animationEnabled: true,
	theme: "light2",
	title:{ text: "График потребления для домов" },

	axisX:{valueFormatString: "MMM YYYY",crosshair: {enabled: true, snapToDataPoint: true}},
	axisY:{title: "Погода", includeZero: true, crosshair: {enabled: true}},
	toolTip:{shared:true},  
	legend:{
		cursor:"pointer",
		verticalAlign: "bottom",
		horizontalAlign: "left",
		dockInsidePlotArea: true,
		itemclick: toogleDataSeries	
	},
	data: [{
		type: "line",
		showInLegend: true,
		name: "потребление тепла",
		markerType: "square",
		xValueFormatString: "DD MMM, YYYY",
		color: "#F08080",
		dataPoints: [
		@{
			if (Model.HousesConsumption != null)
			foreach (var a in Model.HousesConsumption)
			{
				@($$"""{x: new Date({{a.AxisX.Year}},{{a.AxisX.Month}},{{a.AxisX.Day}}), y: {{a.AxisY.ToString("0.00", System.Globalization.CultureInfo.InvariantCulture)}}},""");
			}
		}
		]
	}]
});
HousesConsumption.render();


var PlantsConsumption = new CanvasJS.Chart("plantsConsumption", {
	animationEnabled: true,
	theme: "light2",
	title:{ text: "График потребления для заводов" },

	axisX:{valueFormatString: "MMM YYYY",crosshair: {enabled: true, snapToDataPoint: true}},
	axisY:{title: "Цена", includeZero: true, crosshair: {enabled: true}},
	toolTip:{shared:true},  
	legend:{
		cursor:"pointer",
		verticalAlign: "bottom",
		horizontalAlign: "left",
		dockInsidePlotArea: true,
		itemclick: toogleDataSeries	
	},
	data: [{
		type: "line",
		showInLegend: true,
		name: "потребление тепла",
		markerType: "square",
		xValueFormatString: "DD MMM, YYYY",
		color: "#4F81BC",
		dataPoints: [
		@{
			if (Model.PlantsConsumption != null)
			foreach (var a in Model.PlantsConsumption)
			{
				@($$"""{x: new Date({{a.AxisX.Year}},{{a.AxisX.Month}},{{a.AxisX.Day}}), y: {{a.AxisY.ToString("0.00", System.Globalization.CultureInfo.InvariantCulture)}}},""");
			}
		}
		]
	}]
});
PlantsConsumption.render();


var HousesTrands = new CanvasJS.Chart("housesTrands", {
	animationEnabled: true,
	theme: "light2",
	title:{ text: "График потребления для заводов" },

	axisX:{
		valueFormatString: "DD MMM",
		crosshair: {
			enabled: true,
			snapToDataPoint: true
		}
	},
	axisY: {
		title: "Цена",
		includeZero: true,
		crosshair: {
			enabled: true
		}
	},
	axisZ:{
		title: "Response Time (in ms)",
		includeZero: true
	},
	toolTip:{
		shared:true
	},  
	legend:{
		cursor:"pointer",
		verticalAlign: "bottom",
		horizontalAlign: "left",
		dockInsidePlotArea: true,
		itemclick: toogleDataSeries	
	},
	data: [{
		type: "line",
		showInLegend: true,
		name: "Total Visit",
		markerType: "square",
		xValueFormatString: "DD MMM, YYYY",
		color: "#F08080",
		dataPoints: [
			{ x: new Date(2017, 0, 3), y: 650 },
			{ x: new Date(2017, 0, 4), y: 700 },
			{ x: new Date(2017, 0, 5), y: 710 },
			{ x: new Date(2017, 0, 6), y: 658 },
			{ x: new Date(2017, 0, 7), y: 734 },
			{ x: new Date(2017, 0, 8), y: 963 },
			{ x: new Date(2017, 0, 9), y: 847 },
			{ x: new Date(2017, 0, 10), y: 853 },
			{ x: new Date(2017, 0, 11), y: 869 },
			{ x: new Date(2017, 0, 12), y: 943 },
			{ x: new Date(2017, 0, 13), y: 970 },
			{ x: new Date(2017, 0, 14), y: 869 },
			{ x: new Date(2017, 0, 15), y: 890 },
			{ x: new Date(2017, 0, 16), y: 930 }
		]
	},
	{
		type: "line",
		showInLegend: true,
		name: "Unique Visit",
		lineDashType: "dash",
		dataPoints: [
			{ x: new Date(2017, 0, 3), y: 510 },
			{ x: new Date(2017, 0, 4), y: 560 },
			{ x: new Date(2017, 0, 5), y: 540 },
			{ x: new Date(2017, 0, 6), y: 558 },
			{ x: new Date(2017, 0, 7), y: 544 },
			{ x: new Date(2017, 0, 8), y: 693 },
			{ x: new Date(2017, 0, 9), y: 657 },
			{ x: new Date(2017, 0, 10), y: 663 },
			{ x: new Date(2017, 0, 11), y: 639 },
			{ x: new Date(2017, 0, 12), y: 673 },
			{ x: new Date(2017, 0, 13), y: 660 },
			{ x: new Date(2017, 0, 14), y: 562 },
			{ x: new Date(2017, 0, 15), y: 643 },
			{ x: new Date(2017, 0, 16), y: 570 }
		]
	},
	{
		type: "scatter",
		name: "Server Mars",
		showInLegend: true, 
		color: "#4F81BC",
		toolTipContent: "<span style=\"color:#4F81BC \"><b>{name}</b></span><br/><b> Load:</b> {x} TPS<br/><b> Response Time:</b></span> {y} ms",
		dataPoints: [
			{ x: new Date(2017, 0, 3), y: 500 },
			{ x: new Date(2017, 0, 4), y: 500 },
			{ x: new Date(2017, 0, 5), y: 530 },
			{ x: new Date(2017, 0, 6), y: 590 },
			{ x: new Date(2017, 0, 7), y: 589 },
			{ x: new Date(2017, 0, 8), y: 550 },
			{ x: new Date(2017, 0, 9), y: 500 },
			{ x: new Date(2017, 0, 10), y: 590 },
			{ x: new Date(2017, 0, 11), y: 525 },
			{ x: new Date(2017, 0, 12), y: 530 },
			{ x: new Date(2017, 0, 13), y: 550 },
			{ x: new Date(2017, 0, 14), y: 520 },
			{ x: new Date(2017, 0, 15), y: 553 },
			{ x: new Date(2017, 0, 16), y: 596 }
		]
	}]
});
HousesTrands.render();



}
</script>
</head>
<body>
	<div class="charts">
		<div id="housesConsumption"></div>
		<div id="plantsConsumption"></div>
		<br/>
		<div id="housesTrands"></div>
		<div id="plantsTrands"></div>
		<br/>
		<div id="housesForecast"></div>
		<div id="plantsForecast"></div>
	</div>	
	
	<script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
</body>
</html>
<!--
	Форма отображения графиков (линейные тренды, прогноз) 
	с выбором периода отображения данных.
-->