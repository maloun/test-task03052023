@using demo.Views.Charts
@model ChartsLimits

<script src="~/js/canvasjs.min.js"></script>
<script src="~/js/Charts.js"></script>

<div class="container">
<div class="charts">
	<div>
		с <input id="filterFrom" class="filter" type="date" />
		по <input id="filterTo" class="filter" type="date" />
	</div>

	<div id="linearHouses" class="chart"></div>
	<div id="linearPlants" class="chart"></div>	
	<div id="cityForecast" style="font-size:40px"></div>
	<div id="cityConsumptions" class="chart"></div>
	<div id="consumptionsPie" class="chart"></div>
</div>
</div>
<script>
	var LinearHouses = null,
		LinearPlants = null,
		CityForecast = null,
		CityConsumptions = null,
		ConsumptionsPie = null;

	function RequestChartsData() {
		var filterDate = filtersToStrObj(filterFrom, filterTo);
		if (!EnsureFiltersChanged(filterFrom, filterTo)) return;

		$.ajax({
			url: "/Charts/GetChartsData?from=" + filterDate.from + "&to=" + filterDate.to,
			type: 'GET',
			error:  (data) => alert("ошибка загрузки"),
			success: function (data) 
			{
				data = JSON.parse(data);

				console.log(data);
				renderChart(LinearHouses, () => newChart(
					"linearHouses", "Потребление тепла домами и погода", "Потребление тепла", "Температура", "circle",
					[newAxis("потребление домов", "#F08080", data.LinearHouses, "scatter", "circle")]
				));

				renderChart(LinearPlants, () => newChart(
					"linearPlants", "Потребление тепла заводами и цена на тепло", "Потребление тепла", "Цена", "circle",
					[newAxis("потребление заводов", "#5eaac4", data.LinearPlants, "scatter", "circle")]
				));

				cityForecast.innerHTML = 
					"<br/>Прогноз потребления тепла городом на " + 
					"<b>" + data.CityForecast.date.replace("T00:00:00", "")+ ":</b>"+
					"<br/>" + data.CityForecast.y.toString() + "<br/><br/>";					
					
				renderChart(CityConsumptions, () => newChart(
					"cityConsumptions", "График потребления тепла городом", "", "Погода", undefined,
					[
						newAxis("потребление города", "#8ea3ce", data.CityConsumptions.Sum, "line", "line"),
						newAxis("потребление домов", "#b95052", data.CityConsumptions.Houses, "column", "fill"),
						newAxis("потребление заводов", "#F08080", data.CityConsumptions.Plants, "column", "fill")
					]
				));

				renderChart(CityConsumptions, () => newChart(
					"consumptionsPie", "Соотношение потребления тепла в городе", "", "Погода", undefined,
					[newAxis("потребление города", null	, data.CityConsumptions.Pie, "pie", "pie")]
				));
			}
		});
	}
				

	$(document).ready(function () {
		$("#filterFrom").val("@Model.from.ToString("yyyy-MM-dd")");
		$("#filterTo").val("@Model.to.ToString("yyyy-MM-dd")");
		$(".filter").on("focusout", RequestChartsData);
		RequestChartsData();
	});				
</script>
